department_list:
  dec: "主流程"
  parameters:
    -
      test_name: '获取部门的树状结构-主流程'
      mode: 0
      type:
      methods: get
      url: /opuser/department/list
      data: {
      }
      parser:   &parser {'code' :"['code']", 'msg': '["msg"]' }
      expected: &expected { 'code': 1000, 'msg': 'Success' }

department_update:
  dec: "主流程"
  parameters:
    -
      test_name: '更新部门备注-主流程'
      mode: 1
      type: json
      methods: post
      url: /opuser/department/update
      data: {
              'id': &id 336,
              'note': '总公司001'
      }
      parser:   *parser
      expected:  *expected

departmentUser:
  dec: "主流程"
  parameters:
    -
      test_name: '查询该部门下的员工,分页-主流程'
      mode: 0
      type:
      methods: get
      url: /opuser/user/departmentUser
      data: {
        'departmentId': *id,
        'pageSize': 10,
        'pageNum': 1
      }
      parser:   *parser
      expected:  *expected

getUser:
  dec: "主流程"
  parameters:
    -
      test_name: '通过各种查询条件查询用户，单条-主流程'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUser
      data: {
        'id': 1099
      }
      parser:   *parser
      expected:  *expected

    -
      test_name: '通过各种查询条件查询用户，单条-工号查询'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUser
      data: {
        'jobId': 2007
      }
      parser:    {'jobId': "['data']['jobId']"}
      expected:  { 'jobId': '2007'}
    -
      test_name: '通过各种查询条件查询用户，单条-手机号码搜索'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUser
      data: {
        'phoneId': 18600531753,
        'departmentId': 335
      }
      parser: { 'jobId': "['data']['jobId']" }
      expected: { 'jobId': '2007' }
    -
      test_name: '通过各种查询条件查询用户，单条-手机号码不存在'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUser
      data: {
        'phoneId': 18600531754,
        'departmentId': 335
      }
      parser: { 'data': "['data']" }
      expected: { 'data': '用户不存在' }

update:
  dec: "主流程"
  parameters:
    -
      test_name: '更新用户备注,状态，业务线-主流程'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/update
      data: {
        "id": &userid 1018,
        "note": "测试",
        "status": 1,
        "projectList": [1, 2, 3, 4, 5]
      }
      parser:   *parser
      expected:  *expected
    -
      test_name: '更新用户'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/update
      data: {
        "id": *userid,
        "phoneId": 18600531753,
        "name": "李雪殿",
        "jobId": "2007",
        "title": "测试工程师",
        "status": 0,
        "isLeave": 0,
        "entryTime": "2020-08-10T16:00:00.000+00:00",
        "pageNum": 1,
        "pageSize": 10,
        "departmentList": "支持组",
        "defaultProjectList": [
          {
            "projectId": 1,
            "name": "国考"
          },
          {
            "projectId": 2,
            "name": "执业药师"
          },
          {
            "projectId": 3,
            "name": "护士资格"
          },
          {
            "projectId": 4,
            "name": "中医健康管理师"
          },
          {
            "projectId": 5,
            "name": "健康管理师"
          }
        ],
        "projectList": [
            1,
            2,
            3,
            4,
            5
        ]
      }
      parser:   *parser
      expected:  *expected


getUserList:
  dec: "主流程"
  parameters:
    -
      test_name: '多条件组合查询该部门下员工，多条-工号查询'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUserList
      data: {
        'jobId': 2007,
        departmentId: *id
      }
      parser:    {'jobId': "['data']['list'][0]['jobId']"}
      expected:  { 'jobId': '2007'}
    -
      test_name: '多条件组合查询该部门下员工，多条-用户id查询'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUserList
      data: {
        'id': *userid,
        departmentId: *id
      }
      parser:    {'jobId': "['data']['list'][0]['jobId']"}
      expected: { 'jobId': '2007' }
    -
      test_name: '多条件组合查询该部门下员工，多条-手机号/账号'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUserList
      data: {
        'phoneId': 18600531753,
        departmentId: *id
      }
      parser:    {'jobId': "['data']['list'][0]['jobId']"}
      expected: { 'jobId': '2007' }
    -
      test_name: '多条件组合查询该部门下员工，多条-姓名查询'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUserList
      data: {
        'name': '李雪殿',
        departmentId: *id
      }
      parser:    {'jobId': "['data']['list'][0]['jobId']"}
      expected: { 'jobId': '2007' }
    -
      test_name: '多条件组合查询该部门下员工，多条-账号状态：启用'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUserList
      data: {
        'departmentId': *id,
        'status': 0
      }
      parser:   *parser
      expected:  *expected
    -
      test_name: '多条件组合查询该部门下员工，多条-账号状态：禁用'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUserList
      data: {
        'departmentId': *id,
        'status': 1
      }
      parser:   *parser
      expected:  *expected
    -
      test_name: '多条件组合查询该部门下员工，多条-账号状态：锁定'
      mode: 1
      type: json
      methods: post
      url: /opuser/user/getUserList
      data: {
        departmentId: *id,
          'status': 2
      }
      parser:   *parser
      expected:  *expected

isBussinessInUse:
  dec: "主流程"
  parameters:
    -
      test_name: '判断某条业务线是否在用-主流程'
      mode: 0
      type: json
      methods: get
      url: /opuser/user/isBussinessInUse
      data: {
        'bussinessId': 1
      }
      parser:   *parser
      expected:  *expected


role_list:
  dec: "主流程"
  parameters:
    -
      test_name: '根据部门获取已绑定相关角色-主流程'
      mode: 0
      type:
      methods: get
      url: /oauth/department/role/list
      data: {
        'departmentId': *id,
        'roleName': ''
      }
      parser:   {'code' :"['code']", 'msg': '["msg"]' }
      expected:  { 'code': 1000, 'msg': '操作成功' }


getUsableRole:
  dec: "主流程"
  parameters:
    -
      test_name: '获取部门下可添加的角色-主流程'
      mode: 0
      type:
      methods: get
      url: /oauth/department/role/getUsableRole
      data: {
        'departmentId': *id
      }
      parser:   {'code' :"['code']", 'msg': '["msg"]' }
      expected:  { 'code': 1000, 'msg': '操作成功' }


department_add:
  dec: "主流程"
  parameters:
    -
      test_name: '给部门添加角色-主流程'
      mode: 1
      type: json
      methods: POST
      url: /oauth/department/role/add
      data: {
        'departmentId': *id,
        'roleId': &roleId 79
      }
      parser:   {'code' :"['code']", 'msg': '["msg"]' }
      expected:  { 'code': 1000, 'msg': '操作成功' }

status:
  dec: "主流程"
  parameters:
    -
      test_name: '禁用用户角色-主流程'
      mode: 1
      type: json
      methods: post
      url: /oauth/user/role/status
      data: {
        "userId": *userid,
        "roleId": *roleId,
        "departmentId": *id,
        "status": 0
      }
      parser:   {'code' :"['code']", 'msg': '["msg"]' }
      expected:  { 'code': 1000, 'msg': '操作成功' }

    - test_name: '启用用户角色-主流程'
      mode: 1
      type: json
      methods: post
      url: /oauth/user/role/status
      data: {
        "userId": *userid,
        "roleId": *roleId,
        "departmentId": *id,
        "status": 0
      }
      parser: { 'code': "['code']", 'msg': '["msg"]' }
      expected: { 'code': 1000, 'msg': '操作成功' }

department_delRole:
  dec: "主流程"
  parameters:
    -
      test_name: '从部门下删除角色-主流程'
      mode: 1
      type: json
      methods: POST
      url: /oauth/department/role/delRole
      data: {
        'departmentId': *id,
        'roleId': *roleId
      }
      parser:   {'code' :"['code']", 'msg': '["msg"]' }
      expected:  { 'code': 1000, 'msg': '操作成功' }