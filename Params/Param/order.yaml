order_list:
  dec: "根据条件筛选订单信息"
  parameters:
    - test_name: '根据条件筛选订单信息-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
          'pageNum': 1,
          'pageSize': 20
      }
      parser: &parser { 'code': "['code']", 'msg': '["msg"]' }
      expected: &expected { 'code': 1000, 'msg': '操作成功' }
    -
      test_name: '根据条件筛选订单信息-按项目查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'projectIdList': [1]
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-支付时间查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
          "pageNum": 1,
          "pageSize": 20,
          "beginTime": "2021-07-17 00:00:00",
          "endTime": "2021-07-18 00:00:00"
        }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-订单状态-待支付查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'orderStatus': 2
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-订单状态-已支付查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'orderStatus': 3
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-订单状态-已取消查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'orderStatus': 100
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-订单编号查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'orderNo': "110162639980056000000012"
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-用户id查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'userId': 12
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-用户手机号查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'userPhone': 17610772092
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-商品id查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'goodsId': 17
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件筛选订单信息-商品名称查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'goodsName': '商品名称'
      }
      parser: *parser
      expected: *expected

order_export:
  dec: "根据条件筛选订单信息"
  parameters:
    - test_name: '导出订单信息-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/export
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'projectIdList': [1, 2, 3, 4, 5],
        'userPhone': 18600531753
      }
      parser: *parser
      expected: *expected 


pay_list:
  dec: "根据条件获取订单流水列表"
  parameters:
    - test_name: '根据条件获取订单流水列表-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/pay/list
      data: {
        'pageNum': 1,
        'pageSize': 20
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-按项目查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'projectIdList': [1]
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-支付时间查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        "pageNum": 1,
        "pageSize": 20,
        "beginTime": "2021-07-17 00:00:00",
        "endTime": "2021-07-18 00:00:00"
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-审核时间查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data:  {
        "pageNum": 1,
        "pageSize": 20,
        "checkBeginTime": "2021-07-17 00:00:00",
        "checkEndTime": "2021-07-18 00:00:00"
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-支付方式-微信'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'payChannelCode': 1
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-支付方式-支付宝'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'payChannelCode': 2
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-订单编号查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'orderNo': "110162639980056000000012"
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-用户id查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'userId': 12
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-用户手机号查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'userPhone': 17610772092
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-商品id查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'goodsId': 17
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-商品名称查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'goodsName': '商品名称'
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-三方支付流水号查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'thirdPartNo': '22522433453N'
      }
      parser: *parser
      expected: *expected
    -
      test_name: '根据条件获取订单流水列表-商户订单号查询'
      mode: 1
      type: json
      methods: post
      url: /order/list
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'businessOrderNo': '2021071622001407011435070560'
      }
      parser: *parser
      expected: *expected


pay_get:
  dec: "根据orderPayId获取相应的支付单信息"
  parameters:
    - test_name: '根据orderPayId获取相应的支付单信息-主流程'
      mode: 0
      type: json
      methods: get
      url: /order/pay/get
      data: {
          'orderPayId': 46,
          'orderPayNo': 30RA110162642141435000001126
      }
      parser: *parser
      expected: *expected

pay_saveNote:
  dec: "保存审核备注的修改"
  parameters:
    - test_name: '保存审核备注的修改-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/pay/saveNote
      data: {
        'orderPayId': 46,
        'orderPayNo': 30RA110162642141435000001126,
        'note': 'xuejian'
      }
      parser: *parser
      expected: *expected

pay_refused:
  dec: "支付单审核-打回"
  parameters:
    - test_name: '支付单审核-打回-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/pay/refused
      data: {
        'orderPayId': 46,
        'orderPayNo': 30RA110162642141435000001126,
        'note': 'xuejian'
      }
      parser: *parser
      expected: *expected

pay_refusedBatch:
  dec: "支付单审核-批量打回"
  parameters:
    - test_name: '支付单审核-批量打回-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/pay/refusedBatch
      data: {"orderPayList":[70,69,67,48]}
      parser: *parser
      expected: *expected

pay_check:
  dec: "支付单审核-复核通过"
  parameters:
    - test_name: '支付单审核-复核通过-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/pay/check
      data: {
        'orderPayId': 46,
        'orderPayNo': 30RA110162642141435000001126,
        'note': 'xuejian'
      }
      parser: *parser
      expected: *expected

pay_checkBatch:
  dec: "支付单审核-批量复核通过"
  parameters:
    - test_name: '支付单审核-批量复核通过-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/pay/checkBatch
      data: {"orderPayList":[70,69,67,48]}
      parser: *parser
      expected: *expected

pay_export:
  dec: "导出支付单信息"
  parameters:
    - test_name: '导出支付单信息-主流程'
      mode: 1
      type: json
      methods: post
      url: /order/pay/export
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'projectIdList': [1, 2, 3, 4, 5],
        'userPhone': 18600531753
      }
      parser: *parser
      expected: *expected
    -
      test_name: '导出支付单信息-无数据'
      mode: 1
      type: json
      methods: post
      url: /order/pay/export
      data: {
        'pageNum': 1,
        'pageSize': 20,
        'orderNo': "110162639980056000000012"
      }
      parser: *parser
      expected: {'code': 10000, 'msg': '没有检索到匹配的订单数据'}

prePurchase:
  dec: "商品确认页面"
  parameters:
    - test_name: '按商品ID、用户ID查询预购买信息-主流程'
      mode: 0
      type: json
      methods: get
      url: /market-api/order/prePurchase
      data: {
          'goodsId': &goodsId 109
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }

CreateOrder:
  dec: "创建商品订单"
  parameters:
    - test_name: '创建商品订单-主流程'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/create
      data: {
              'paidAmount': 0.01,
              'goodsId': *goodsId,
              'paymentMethod': 10,
              'projectCategoryId': &projectCategoryId 3
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }

getPayment:
  dec: "获取支付信息"
  parameters:
    - test_name: '获取支付信息-主流程'
      mode: 0
      type: json
      methods: get
      url: /market-api/pay/getPayment
      data: {
        'orderId': 1,
        'orderNo': 1
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }

repay_order:
  dec: "订单重新支付"
  parameters:
    - test_name: '订单重新支付-主流程'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/repay
      data: {
        'orderId': 1,
        'paidPrice': '',
        'paymentMethod': ''
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }

getDetailByOrderId:
  dec: "查询订单详情"
  parameters:
    - test_name: '查询订单详情-主流程'
      mode: 0
      type: json
      methods: get
      url: /market-api/order/getDetailByOrderId
      data: {
        'orderId': 1,
        'paidPrice': '',
        'paymentMethod': ''
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }

getOrders:
  dec: "获取订单列表"
  parameters:
    - test_name: '获取订单列表-主流程'
      mode: 0
      type: json
      methods: get
      url: /market-api/order/getOrders
      data: {
        'projectCategoryId': *projectCategoryId,
        'status': 1,
        'pageSize': 10,
        'pageIndex': 1,
        'orderBy': '',
        'orderDirection': '',
        'groupBy': '',
        'needTotalCount': 'true'
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }

cancel_Order:
  dec: "取消订单"
  parameters:
    - test_name: '取消订单-主流程'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/cancel
      data: {
        'orderId': 1,
        'paidPrice': '',
        'paymentMethod': ''
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }

PayCallBack:
  dec: "支付回调（后端使用）"
  parameters:
    - test_name: '支付回调（后端使用）-主流程'
      mode: 0
      type: json
      methods: get
      url: /market-api/order/cancel
      data: {
        'orderId': 1,
        'paidPrice': '',
        'paymentMethod': ''
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }


CreateOrder_1:
  dec: "创建商品订单"
  parameters:
    -
      test_name: '创建商品订单-主流程'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/create
      data: {
        'paidAmount': 0.01,
        'goodsId': *goodsId,
        'paymentMethod': 10,
        'projectCategoryId': *projectCategoryId
      }
      parser: *parser
      expected: { 'code': 1000, 'msg': 'Success' }
    -
      test_name: '创建商品订单-商品价格已改变'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/create
      data: {
        'paidAmount': 100,
        'goodsId': *goodsId,
        'paymentMethod': 10,
        'projectCategoryId': *projectCategoryId
      }
      parser: *parser
      expected: { 'code': 9003, 'msg': '商品价格已改变' }
    -
      test_name: '创建商品订单-限购'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/create
      data: {
        'paidAmount': 0.01,
        'goodsId': 115,
        'paymentMethod': 10,
        'projectCategoryId': 1
      }
      parser: *parser
      expected: { 'code': 9002, 'msg': '您已达到商品购买数量上限' }
    -
      test_name: '创建商品订单-0元限购'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/create
      data: {
        'paidAmount': 0,
        'goodsId': 118,
        'paymentMethod': 10,
        'projectCategoryId': *projectCategoryId
      }
      parser: *parser
      expected: { 'code': 9002, 'msg': '您已达到商品购买数量上限' }
    -
      test_name: '创建商品订单-商品未上架'
      mode: 1
      type: json
      methods: post
      url: /market-api/order/create
      data: {
        'paidAmount': 0.01,
        'goodsId': 125,
        'paymentMethod': 10,
        'projectCategoryId': *projectCategoryId
      }
      parser: { 'code': "['code']"}
      expected: { 'code': 32007}